import { OnInit, EventEmitter } from '@angular/core';
import { ImageViewerConfig, CustomEvent } from './image-viewer-config.model';
import { DomSanitizer } from '@angular/platform-browser';
import * as i0 from "@angular/core";
export declare class ImageViewerComponent implements OnInit {
    moduleConfig: ImageViewerConfig;
    sanitizer: DomSanitizer;
    src: string[];
    index: number;
    config: ImageViewerConfig;
    indexChange: EventEmitter<number>;
    configChange: EventEmitter<ImageViewerConfig>;
    customEvent: EventEmitter<CustomEvent>;
    checkedIndex: number[];
    style: {
        transform: string;
        msTransform: string;
        oTransform: string;
        webkitTransform: string;
    };
    fullscreen: boolean;
    loading: boolean;
    private scale;
    private rotation;
    private translateX;
    private translateY;
    private prevX?;
    private prevY?;
    private hovered;
    constructor(moduleConfig: ImageViewerConfig, sanitizer: DomSanitizer);
    ngOnInit(): void;
    zoomIn(): void;
    zoomOut(): void;
    onError(index: number): void;
    scrollZoom(evt: any): false | undefined;
    rotateClockwise(): void;
    rotateCounterClockwise(): void;
    onLoad(): void;
    onLoadStart(): void;
    onDragOver(evt: DragEvent): void;
    onDragStart(evt: DragEvent): void;
    toggleFullscreen(): void;
    triggerIndexBinding(): void;
    triggerConfigBinding(): void;
    fireCustomEvent(name: string, imageIndex: number): void;
    reset(): void;
    private onMouseOver;
    private onMouseLeave;
    private canNavigate;
    private updateStyle;
    private mergeConfig;
    static ɵfac: i0.ɵɵFactoryDeclaration<ImageViewerComponent, [{ optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ImageViewerComponent, "ngx-image-preview", never, { "src": { "alias": "src"; "required": false; }; "index": { "alias": "index"; "required": false; }; "config": { "alias": "config"; "required": false; }; }, { "src": "src"; "indexChange": "indexChange"; "configChange": "configChange"; "customEvent": "customEvent"; }, never, ["*"], false, never>;
}
